css背景
p{
   width:150px;
   padding:10px;
   background-color:aquq;
}
p{
   width:200px;
   background-image:url("123.jpg");
   background-repeat:no-repeat;   //不允许重复
   background-position:left top;top是指图片的顶部
   background-position:100px 100px；
background-attachment:fixed;图片不随内容滚动
}
文本
p{
color:red;
text-align:left;//对齐
text-indent:2em; //缩进 
text-transform:capitalize;首字母大写   lowercase小写
}
css3提供的文本特效
p{
    text-shadow:10px 10px 2px #FFcc00;//增加文字的阴影，距离左边的距离  距离右边的距离  阴影清晰度 和 颜色
    width：100px;
    text-wrap:normal;//自动换行
}
css字体
p{
font-size:40px;
font-family:fantasy;
}
链接
链接的四种状态：
a:link - 普通的、未被访问的链接
a:visited - 用户已访问的链接
a:hover - 鼠标指针位于链接的上方
a:active - 链接被点击的时刻
a:link {
      color:#FF0000;
      text-decoration:none;
}		/* 未被访问的链接 */
a:visited {color:#00FF00;}	/* 已被访问的链接 */
a:hover {color:#FF00FF;}	/* 鼠标指针移动到链接上 */
a:active {color:#0000FF;}	/* 正在被点击的链接 */
列表
ul li{
    list-style-image:url("icon1.gif");为列表添加图片
}
表格
#tb,tr,th,td{
border:1px solid blue;
text-align:center;//设置内容居中显示
}
#tb{
width：400px;
height:400px;
border-collapse:collapse;//合并边框
}
#tb th{
text-align:right;
background-color:aqua;
}
轮廓
p{
outline-color:aqua;  //设置轮廓颜色
outline-style:dotted;//设置轮廓的线型
}
css常用操作
对齐
.div{
width:70%;
height:1000px;
background-color:red;
margin-left:auto;//居中对齐
margin-right:auto;

position:absolute;  //绝对布局，距离左边0px；
left:0px;

float:left //向左对齐  三种水平对齐方式 
    
margin:100px auto;//上下是100px  左右居中
}
分类
 p{
width:400px;
line-height:normal;
}
p{
width:400px;
line-height:200%;
}
p{
cursor:cell;//把鼠标显示设置成加号
}
导航栏
ul{
list-style-type:none;//去掉无序列表前面的点
magrin:0px;
padding:0px;
}
a:link,a:visited{
font-weight:bold;//把文字变粗
text-decoration:none;//去掉下划线
display:block;  //显示为块状元素
background-color:burlywood;
color:aliceblue;
width:50px;
text-align:center;
}
a:active,a:hover{
background-color:crimson;
}
li{
  display:inline; //显示为水平导航栏
padding:3px;
padding-left:5px;
padding-right:5px;
}
图片
.image{
border:1px solid darkgray;
width:auto;
height:auto;
float:left;
text-align:center;
}
img{
margin:5px;
opacity:0.5//半透明的效果
}
.text{
font-size:12px;
magin-bottom:5px;
}
css选择器
h1,h2{
    //选择器分组
} 
类选择器
 结合元素选择器
 <div>123</div>
 <a class="div">jikexueyuan</a>
a.div{
color:red;
} 
多类选择器
<div class="p1">123</div>
<div class="p1">123</div>
<div class="p1 p2">123</div>
.p1{
color:red;
}
.p2{
fint-size:3px;
}
.p1.p2{
font-style:normal;//既拥有前面的样式也拥有自己定义的样式
}
id选择器与类选择器的区别：
ID只能在文档中使用一次，而类选择器可以使用多次。
id选择器不能结合使用。
当使用js时候，需要用到id
属性选择器
<style>
[title]{
color:aqua;
}
[href="http://www.google.com"]{
color:red;
}
[title~="title"]{//选择值中有title的属性
color:red;
}
</style>
<p title="">hello</p>
<a href="http://www.google.com">谷歌</a>
属性的值必须一样。
<p title="tit">hello</p>
<p title="title">hello</p>//根据属性的值进行匹配
<p title="t">hello</p>  
<p title="title hello">hello</p>  //根据属性的值进行匹配
后代选择器
<p>this is an <strong>web<i>hello</i></strong>site</p>
p strong i{
color:red;
}
p i{//不经过strong也能找到i
color:red;
}
子元素选择器，与后代选择器不同，子元素只能选择某元素的子元素，而不能选择孙元素等
<p>this is an <strong>web</strong>site</p>
p>strong{
color:red;
}
相邻兄弟选择器
可选择紧接在另一个元素后的元素，而且两者有相同的父级元素。
<div>
   <ul>
       <li>item1</li>
       <li>item2</li>
       <li>item3</li>
   </ul>
</div>
li+li{
font-size:50px;
color:red;
}//后面两个的样式发生改变，选择的是邻接在li元素后的li元素










